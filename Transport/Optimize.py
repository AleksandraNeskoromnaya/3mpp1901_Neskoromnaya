from scipy.optimize import linprog	 # подключение библиотеки
import time # подключение библиотеки для работы таймера
start = time.time() # старт таймера
c = [7,1,1,4,2,3,5,6,6,8,8,2,4,3,7,3,4,2,5,8,8,1,4,7,6] # коэффициенты целевой функции
b_ub = [70,46,39,41,55] #  правая часть ограничений – верхних границ
A_ub = [[1,1,1,1,1, 0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 1,1,1,1,1 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ,1,1,1,1,1 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0 ,1,1,1,1,1]] #двумерный массив ndarray (или список списков) с коэффициентами ограничений –верхних границ («≤»);
b_eq = [23,38,30,15,8] # правая часть ограничений равенства;
A_eq = [[1,0,0,0,0, 1,0,0,0,0,  1,0,0,0,0, 1,0,0,0,0, 1,0,0,0,0 ],
        [0,1,0,0,0, 0,1,0,0,0,  0,1,0,0,0, 0,1,0,0,0, 0,1,0,0,0 ],
        [0,0,1,0,0, 0,0,1,0,0,  0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0],
        [0,0,0,1,0, 0,0,0,1,0,  0,0,0,1,0, 0,0,0,1,0, 0,0,0,1,0],
        [0,0,0,0,1, 0,0,0,0,1,  0,0,0,0,1, 0,0,0,0,1, 0,0,0,0,1]] # двумерный массив ndarray (или список списков) с коэффициентами ограничений равенства;
print(linprog(c, A_ub, b_ub, A_eq,  b_eq)) 
stop = time.time() # стоп таймера
print ("Время :")
print(stop - start)